@page "/settings"
@using System.Net.Http;
@using Newtonsoft.Json;

@inject IHttpClientFactory ClientFactory;

<PageTitle>Settings</PageTitle>

<h2>Settings</h2>
<hr>
<div class="row">
    <div class="col-12 col-md-6 col-lg-4 mt-3">
        <h2>Add User</h2>
        <form>
            <div class="form-group mt-2">
                <label for="">First Name</label>
                <input type="text" class="form-control" name="FirstName" placeholder="FirstName" required>
            </div>
            <div class="form-group mt-2">
                <label for="">Last Name</label>
                <input type="text" class="form-control" name="LastName" placeholder="LastName" required>
            </div>
            <div class="form-group mt-2">
                <label for="">Age</label>
                <input type="number" class="form-control" name="Age" placeholder="Age" required>
            </div>
            <div class="form-group mt-2">
                <label for="">Address</label>
                <input type="text" class="form-control" name="Address" placeholder="Address" required>
            </div>
            <div class="form-group mt-2">
                <label for="">Email</label>
                <input type="email" class="form-control" name="Email" placeholder="Email" required>
            </div>
            <div class="form-group mt-2">
                <label for="">Phone</label>
                <input type="number" class="form-control" name="Phone" placeholder="Phone" required>
            </div>
            <button type="submit" class="btn btn-primary w-100 mt-3">Add User</button>
        </form>
    </div>
    <div class="col-12 col-md-6 col-lg-4 mt-3">
        <h2>Edit User</h2>
        <form>
            <div class="form-group">
                <label for="">Select a user</label>
                <select class="form-select" name="UID" @onchange="update_form_details">
                    @foreach (var user in user_list)
                    {
                    <option value="@user.UID">@user.FirstName @user.LastName</option>
                    }
                </select>
            </div>
            <div class="form-group mt-2">
                <label for="">First Name</label>
                <input type="text" class="form-control" name="FirstName" value="@FirstName" required>
            </div>
            <div class="form-group mt-2">
                <label for="">Last Name</label>
                <input type="text" class="form-control" name="LastName" value="@LastName" required>
            </div>
            <div class="form-group mt-2">
                <label for="">Age</label>
                <input type="number" class="form-control" name="Age" value="@Age" required>
            </div>
            <div class="form-group mt-2">
                <label for="">Address</label>
                <input type="text" class="form-control" name="Address" value="@Address" required>
            </div>
            <div class="form-group mt-2">
                <label for="">Email</label>
                <input type="email" class="form-control" name="Email" value="@Email" required>
            </div>
            <div class="form-group mt-2">
                <label for="">Phone</label>
                <input type="number" class="form-control" name="Phone" value="@Phone" required>
            </div>
            <button type="submit" class="btn btn-success w-100 mt-3">Change User</button>
        </form>
    </div>
</div>

@code {
    List<User> user_list = new List<User>();
    protected override async Task OnInitializedAsync()
    {
        // Inside your server-side Razor Page or API controller action
        using (var httpClient = new HttpClient())
        {
            var users_url = "http://localhost/api/get_users.php";
            var response = await httpClient.GetAsync(users_url);

            var response_body = await response.Content.ReadAsStringAsync();
            dynamic response_object = JsonConvert.DeserializeObject<dynamic>(response_body);

            int status_code = (int)response.StatusCode;
            
            if (status_code != 200) {
                Console.WriteLine(response_object["status"] + " : " + response_object["message"]);
                return;
            }

            Console.WriteLine(response_object);

            foreach (var user in response_object["data"]) {

                User new_user = new User(        
                    (int)user["UID"],
                    (string)user["FirstName"],
                    (string)user["LastName"],
                    (int)user["Age"],
                    (string)user["Address"],
                    (string)user["Email"],
                    (string)user["Phone"]
                );
            
                user_list.Add(new_user);
            }
        }
    }

    private int SelectedUser;
    private string FirstName;
    private string LastName;
    private int Age;
    private string Address;
    private string Phone;
    private string Email;

    private void update_form_details(ChangeEventArgs e)
    {
        int.TryParse(e.Value.ToString(), out SelectedUser);
        var selectedUser = user_list.FirstOrDefault(user => user.UID == SelectedUser);
        FirstName = selectedUser?.FirstName;
        LastName = selectedUser?.LastName;
        Age = (int)selectedUser.Age;
        Address = selectedUser?.Address;
        Phone = selectedUser?.Phone;
        Email = selectedUser?.Email;
    }
}